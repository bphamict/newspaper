<ol class="breadcrumb">
    <li><a href="/admin">Home</a></li>
    <li><a href="/admin/users">Users</a></li>
    <li class="active">User info</li>
</ol>
<h1 style="text-align:center; margin-bottom:20px">Hồ sơ người dùng</h1>
<form style="width: 30%; margin:auto;" method="POST" id="user-form">
    <div class="form-group">
        <label for="inputFullName">Họ tên</label>
        <input type="text" class="form-control" id="inputFullName" name="full_name" value="{{this.user.full_name}}">
        <div class="full-name-error"></div>
    </div>
    <div class="form-group">
        <label for="inputEmail">Email</label>
        <input type="email" class="form-control" id="inputEmail" name="email" value="{{this.user.email}}">
        <div class="email-error"></div>
    </div>
    <div class="form-group">
        <label for="inputDOB">Ngày sinh</label>
        <input type="date" class="form-control" id="inputDOB" name="dob" value="{{this.user.dob}}">
        <div class="dob-error"></div>
    </div>
    <div class="form-group input-3">
        <label for="inputPassword">Mật khẩu</label>
        <input type="password" class="form-control" id="inputPassword" name="password">
        <small class="text-danger">Nếu không muốn đổi mật khẩu thì hãy để trống</small>
    </div>
    <div class="form-group">
        <label>Vai trò</label>
        <select class="form-control role-option" style="text-transform: uppercase;" name="role">
            {{#each roles}}
                <option value={{this.id}} {{#ifEqual @root.user.role this.id}}selected{{/ifEqual}}>{{this.name}}</option>
            {{/each}}
        </select>
    </div>
    <div class="form-group subscriber-expiry-date">
        <label>Thời hạn</label>
        <div class="input-group">
            <input class="form-control expire-value" value="{{this.user.expiry_value}}" name="expiry_time" style="display: none;"></input>
            <p class="form-control expire-text">{{this.user.expiry_time}}</p>
            <span class="input-group-btn">
                <button class="btn btn-default extend-btn" type="button" {{#unless this.expired}}disabled{{/unless}}>Gia hạn</button>
            </span>
        </div>
    </div>
    <div class="form-group editor-category">
        <label>Danh mục quản lý</label>
        <select class="form-control category-option" name="category">
            {{#each this.vacantCategories}}
                <option value={{this.id}} {{#ifEqual this.user_id @root.user.id}}class="selected-category" selected{{/ifEqual}}>{{this.name}}</option>
            {{/each}}
        </select>
    </div>
    <div style="text-align:center; margin-top: 40px">
        <button role="button" class="btn btn-primary check-btn">Lưu</button>
    </div>
</form>

{{#section 'js'}}
<script>
    $(document).ready(function() {
        const user = {{{ json user }}};
        var expiryTime = $('.expire-value').val();
        moment.locale('vi');
        if(user.role === 4) {
            $('.editor-category').hide();
        } else if (user.role === 2) {
            $('.subscriber-expiry-date').hide();
        } else {
            $('.editor-category').hide();
            $('.subscriber-expiry-date').hide();
        }
        $('.extend-btn').on('click', function(){
            var newDate = moment(new Date()).add(10080, 'm');
            $('.expire-text').html(newDate.format('LLL'));
            $('.expire-value').val(newDate.format('YYYY-MM-DD HH:mm:ss'));
            $('.extend-btn').attr('disabled', 'true');
        });

        const selected = $('.selected-category');
        if(!selected[0]) {
            $('.category-option').prop('selectedIndex', -1);
        }

        async function validate() {
            $('.full-name-error').html('');
            $('.email-error').html('');
            $('.dob-error').html('');
            var hasError = false;

            const fullName = $('#inputFullName').val();
            if(!fullName) {
                $('.full-name-error').html('<small class="text-danger">Họ tên không được để trống</small>');
                hasError = true;
            } else if(fullName.normalize('NFD').replace(/[\u0300-\u036f]/g, '').replace(/đ/g, 'd').replace(/Đ/g, 'D').match(/[^A-Za-z ]/g)) {
                $('.full-name-error').html('<small class="text-danger">Họ tên không hợp lệ</small>');
                hasError = true;
            }

            const email = $('#inputEmail').val();
            if(!email) {
                $('.email-error').html('<small class="text-danger">Email không được để trống</small>')
                hasError = true;
            } else if(email !== user.email) {
                await $.ajax({
                    type: 'POST',
                    url: `/admin/users/isEmail`,
                    data: {
                        email,
                    },
                    success: function(data) {
                        if(data.msg !== 'Là email') {
                            $('.email-error').html(`<small class="text-danger">${data.msg}</small>`);
                            hasError = true;
                        }
                    },
                    error: function(error) {
                        if(error) {
                            console.log(error);
                        }
                    }
                })
            }

            const dob = $('#inputDOB').val();
            if(!dob) {
                $('.dob-error').html('<small class="text-danger">Ngày sinh không được để trống</small>');
                hasError = true;
            } else if(moment().isSameOrBefore(dob, 'day')) {
                $('.dob-error').html('<small class="text-danger">Ngày không hợp lệ</small>');
                hasError = true;
            }

            const password = $('#inputPassword').val();
            if(password && (password.length < 8 || !password.match(/\d/g))) {
                $('.input-3 > small').remove();
                $('.input-3').append('<small class="text-danger">Password phải dài hơn 8 kí tự và có chứa ít nhất 1 chữ số</small>');
                hasError = true;
            }

            if(!hasError) {
                $('#user-form').off('submit').submit();
            } else {
                return false;
            }
        }

        $('#user-form').on('submit', (e) => {
            e.preventDefault();
            validate();
        })

        $('.role-option').on('change', function() {
            var currentRoleID = +$(this).val();
            if(currentRoleID === 2) {
                $('.editor-category').show();
                $('.subscriber-expiry-date').hide();
            } else if (currentRoleID === 4) {
                $('.editor-category').hide();
                $('.subscriber-expiry-date').show();
                moment.locale();
                var newDate = moment(new Date()).add(10080, 'm');
                $('.expire-text').html(expiryTime === '' ? newDate.format('LLL') : expiryTime);
                $('.expire-value').val(expiryTime === '' ? newDate.format('YYYY-MM-DD HH:mm:ss') : expiryTime);
            } else {
                $('.editor-category').hide();
                $('.subscriber-expiry-date').hide();
            }
        })
    })
</script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.27.0/moment.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.27.0/locale/vi.min.js"></script>
{{/section}}

{{#section 'title'}}
Thông tin chi tiết
{{/section}}